{;; ---------------------------------------------------------
 :paths
 ["src" "resources"]
 ;; ---------------------------------------------------------

 ;; ---------------------------------------------------------
 :deps
 {;; Service
  org.clojure/clojure {:mvn/version "1.12.0"}
  com.brunobonacci/mulog {:mvn/version "0.9.0"}
  http-kit/http-kit {:mvn/version "2.8.0"}
  metosin/reitit {:mvn/version "0.7.1"}
  metosin/muuntaja {:mvn/version "0.6.10"}
  buddy/buddy-auth {:mvn/version "3.0.323"}
  buddy/buddy-hashers {:mvn/version "2.0.167"}
  com.github.seancorfield/next.jdbc {:mvn/version "1.3.939"}
  org.xerial/sqlite-jdbc {:mvn/version "3.46.1.0"}
  migratus/migratus {:mvn/version "1.5.6"}
  com.github.seancorfield/honeysql {:mvn/version "2.6.1147"}
  ring/ring-json {:mvn/version "0.5.1"}
  ;; Simple logging implementation using by Buddy for ex
  org.slf4j/slf4j-simple {:mvn/version "2.0.16"}
  ;; Configuration management
  ;; https://github.com/juxt/aero
  aero/aero {:mvn/version "1.1.6"}}

 ;; ---------------------------------------------------------
 :aliases
 {;; ------------
  ;; Clojure.main execution of application
  :run/app
  {:main-opts ["-m" "apossiblespace.parts"]}

  ;; Clojure.exec execution of specified function
  :run/greet
  {:exec-fn apossiblespace.parts/greet
   :exec-args {:name "Clojure"}}
  ;; ------------

  ;; ------------
  ;; Add libraries and paths to support additional test tools
  :test/env
  {}

  ;; Test runner - local and CI
  ;; call with :watch? true to start file watcher and re-run tests on saved changes
  :test/run
  {:extra-paths ["test"]
   :extra-deps {lambdaisland/kaocha {:mvn/version "1.91.1392"}}
   :main-opts   ["-m" "kaocha.runner"]
   :jvm-opts ["-Dparts.environment=test"]
   :exec-fn kaocha.runner/exec-fn
   :exec-args {:randomize? false
               :fail-fast? false}}
  ;; ------------

  ;; ------------
  ;; tools.build `build.clj` built script
  :build/task
  {:replace-paths ["."]
   :replace-deps  {io.github.clojure/tools.build {:mvn/version "0.10.5"}}
   :ns-default    build}
  ;; ------------

  ;; ------------
  ;; Updating dependencies with clojure -M:antq --upgrade
  :antq
  {:deps {com.github.liquidz/antq {:mvn/version "2.9.1221"}}
   :main-opts ["-m" "antq.core"]}}}
;; ------------
;; ---------------------------------------------------------
